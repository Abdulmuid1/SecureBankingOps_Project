name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: securebankingopsacr
      ACR_LOGIN: securebankingopsacr.azurecr.io
      RESOURCE_GROUP: securebankingops-rg
      AKS_CLUSTER: securebankingops-aks
      K8S_NAMESPACE: securebankingops

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: az aks get-credentials -g $RESOURCE_GROUP -n $AKS_CLUSTER --overwrite-existing

      - name: Log in to Azure Container Registry
        run: az acr login --name $ACR_NAME

      # --- Loop over all services ---
      - name: Build, scan, push and deploy services
        run: |
          set -euo pipefail

          SERVICES=("auth-service" "accounts" "payments")
          for svc in "${SERVICES[@]}"; do
            echo "=== Processing $svc ==="

            IMAGE=${ACR_LOGIN}/${svc}:${GITHUB_SHA::8}
            echo "Building image $IMAGE"
            docker build -t "$IMAGE" "services/$svc"
            echo "Pushing $IMAGE"
            docker push "$IMAGE"

            echo "Running Trivy scan for $svc image"
            trivy image --ignore-unfixed --severity CRITICAL,HIGH "$IMAGE" || true

            echo "Deploying $svc with Helm"
            helm upgrade --install "$svc" "helm-charts/$svc" \
              --namespace "$K8S_NAMESPACE" --create-namespace \
              --set image.repository="${ACR_LOGIN}/${svc}" \
              --set image.tag="${GITHUB_SHA::8}"
          done
