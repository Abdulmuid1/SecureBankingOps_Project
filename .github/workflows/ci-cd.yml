name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: securebankingopsacr       
      ACR_LOGIN: securebankingopsacr.azurecr.io
      RESOURCE_GROUP: securebankingops-rg
      AKS_CLUSTER: securebankingops-aks
      K8S_NAMESPACE: securebankingops

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}   

      - name: Get AKS credentials
        run: az aks get-credentials -g $RESOURCE_GROUP -n $AKS_CLUSTER --overwrite-existing

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name $ACR_NAME

      - name: Build and push Docker image
        run: |
          IMAGE=${{ env.ACR_LOGIN }}/auth-service:${GITHUB_SHA::8}
          docker build -t $IMAGE services/auth-service
          docker push $IMAGE    

      - name: Run Trivy vulnerability scanner (filesystem)
        uses: aquasecurity/trivy-action@0.12.0
        with:
          scan-type: filesystem
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          input: '.' # the repo root

      - name: Run Trivy vulnerability scanner (image)
        uses: aquasecurity/trivy-action@0.12.0
        with:
          scan-type: image
          image-ref: ${{ env.ACR_LOGIN }}/${{ github.repository }}:${{ github.sha }}
          ignore-unfixed: true
          severity: CRITICAL,HIGH


      - name: Helm upgrade/install
        run: |
          helm upgrade --install auth-service helm-charts/auth-service \
            --namespace $K8S_NAMESPACE --create-namespace \
            --set image.repository=${{ env.ACR_LOGIN }}/auth-service \
            --set image.tag=${GITHUB_SHA::8}
